# Установка Puppet-server #
+++++++++++++++++++++++++++

# Необходимо привести в следующий вид файл /etc/hosts:

###############################################################################
127.0.0.1   server.com server localhost
130.193.69.47    server.com     # NIC <eth2>
192.168.0.101    server.com     # NIC <eth3>
192.168.0.104	agent01.com
192.168.0.105	agent02.com
192.168.0.106	alone.com
###############################################################################

# Добавляем репозиторий puppet-labs:
rpm -ihv http://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-7.noarch.rpm

# Устанавливаем необходимые пакеты:
yum install -y puppet-server puppet-dashboard gcc-c++ patch readline readline-devel zlib zlib-devel libyaml-devel libffi-devel openssl-devel make bzip2 autoconf automake libtool bison glibc

# При этом подтянулись следующие пакеты:
augeas-libs facter hiera libselinux-ruby pciutils puppet ruby-augeas ruby-irb ruby-mysql ruby-rdoc ruby-rgen  ruby-shadow rubygem-json rubygem-rake rubygems virt-what

# Устанавливаем пакет rails:
gem install rails

# Возникает ошибка:
Building native extensions.  This could take a while...
ERROR:  Error installing atomic:
    ERROR: Failed to build gem native extension.

/usr/bin/ruby extconf.rb
mkmf.rb can't find header files for ruby at /usr/lib/ruby/ruby.h


Gem files will remain installed in /usr/lib/ruby/gems/1.8/gems/atomic-1.1.14 for inspection.
Results logged to /usr/lib/ruby/gems/1.8/gems/atomic-1.1.14/ext/gem_make.out

# ПРоблему можно устранить обновив гемы и доки и установив ruby-devel:
yum install ruby-rdoc ruby-devel -y
gem update
gem update --system

# Но возникает следующая проблема:
gem install rails
Building native extensions.  This could take a while...
Successfully installed atomic-1.1.14
Fetching: thread_safe-0.1.3.gem (100%)
Successfully installed thread_safe-0.1.3
Fetching: activesupport-4.0.0.gem (100%)
ERROR:  Error installing rails:
    activesupport requires Ruby version >= 1.9.3.

Т.к. в стандартных репозитоиях нет Ruby >= 1.9.3, прийдется ставить из сорцов (rvm)

### Далее пойдет процесс установки RVM (ruby virtual machine)
# Установка руби 1.9.3 используя rvm. 
# RVM хорош тем, что можно определить - кому будет доступен руби, управлять несколькими версиями руби на сервере. Собирется из сорцов. 
# С моей стороны проблем не обнаружено. 
curl -L get.rvm.io | bash -s stable

	* Пользователи, которые будут пользоваться ruby/rvm необходимо добавить в группу 'rvm',
   	Они должны перелогиниться, для них будут доступны команды и переменные ruby `umask u=rwx,g=rwx,o=rx`.

  	* Для рута необходимо выполнить команду `source /etc/profile.d/rvm.sh` перед использованием руби. Для загрузки переменных и новых команд.

# Устанавливаем зависимости:
rvm requirements

# Если чего-то не хватает, то установить эту пачку:
yum install -y gcc-c++ patch readline readline-devel zlib zlib-devel libyaml-devel libffi-devel openssl-devel make bzip2 autoconf automake libtool bison glibc

# Устанавливаем руби 1.9.3:
rvm install 1.9.3

Назначем его по умолчанию:
rvm use 1.9.3 --default

Устанавливаем необходимые гемы ( обновляем )
rvm rubygems current
gem update --system 1.8.25
gem install rails

# Добавляем рута и пользователей (которые будут иметь доступ к rvm) в группу rvm:
usermod -aG rvm root 

# Так как пакеты puppet-server и puppet-dashboard у нас удалились после удаления ruby-1.8.7, установим их снова.
yum install -y puppet-server puppet-dashboard 
# Можно не удаляя ruby-1.8.7 установить RVM ruby-1.9.3

# Добавляем puppet-dashboard в группу rvm:
usermod -aG rvm puppet-dashboard

# Изменяем переенные в /etc/sysconfig/puppet-dashboard -
# DASHBOARD_RUBY=/usr/bin/ruby => DASHBOARD_RUBY=/usr/local/rvm/rubies/ruby-1.9.3-p448/bin/ruby
sed -i 's/DASHBOARD_RUBY=\/usr\/bin\/ruby/DASHBOARD_RUBY=\/usr\/local\/rvm\/rubies\/ruby-1.9.3-p448\/bin\/ruby/g' /etc/sysconfig/puppet-dashboard
Не уверен что нам эта настройка нужна, т.к. у нас будет apache-mod_passenger

# Перейдите к настройке клиента, после пункта запуска демона на клиенте выполните следующую команду на сервере:
puppet cert --list
# Вывод комманды должен быть примерно следующим:
	"alone.com" (MD5) E5:2B:F8:1B:DE:21:1B:62:78:82:07:FC:00:E0:99:D9
# Говорит о том, какой сервер ждет от нас сертификата. Давайте его подпишем:
puppet cert sign alone.com
# Вывод примерно следующий:
Notice: Signed certificate request for alone.com
Notice: Removing file Puppet::SSL::CertificateRequest alone.com at '/var/lib/puppet/ssl/ca/requests/alone.com.pem'

Далее установка Puppet-dashboard.txt






